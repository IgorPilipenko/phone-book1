#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
#include <string>
#include <iomanip>

struct Контакт {
    std::string Имя;
    std::string Фамилия;
    std::string ТелефонныйНомер;
};

std::vector<Контакт> ТелефоннаяКнига;

// Добавление контакта
void ДобавитьКонтакт() {
    Контакт контакт;
    std::cout << "Введите имя: ";
    std::cin >> контакт.Имя;
    std::cout << "Введите фамилию: ";
    std::cin >> контакт.Фамилия;
    std::cout << "Введите номер телефона: ";
    std::cin >> контакт.ТелефонныйНомер;

    ТелефоннаяКнига.push_back(контакт);
}

// Удаление контакта
void УдалитьКонтакт() {
    std::string имя;
    std::cout << "Введите имя для удаления: ";
    std::cin >> имя;

    auto it = std::find_if(ТелефоннаяКнига.begin(), ТелефоннаяКнига.end(), [имя](const Контакт& c) {
        return c.Имя == имя;
        });

    if (it != ТелефоннаяКнига.end()) {
        ТелефоннаяКнига.erase(it);
        std::cout << "Контакт успешно удален.\n";
    }
    else {
        std::cout << "Контакт не найден.\n";
    }
}

// Сортировка контактов
void СортировкаКонтактов() {
    std::sort(ТелефоннаяКнига.begin(), ТелефоннаяКнига.end(), [](const Контакт& a, const Контакт& b) {
        return a.Имя < b.Имя;
        });
}

// Сохранение справочника в файл
void СохранитьВФайл() {
    std::ofstream файл("phonebook.txt");
    if (файл.is_open()) {
        for (const auto& контакт : ТелефоннаяКнига) {
            файл << контакт.Имя << " " << контакт.Фамилия << " " << контакт.ТелефонныйНомер << "\n";
        }
        файл.close();
        std::cout << "Данные сохранены в phonebook.txt\n";
    }
    else {
        std::cout << "Не удалось открыть файл.\n";
    }
}

// Валидация номера телефона
bool ВалидныйНомерТелефона(const std::string& номерТелефона) {
    return номерТелефона.size() == 10 && std::all_of(номерТелефона.begin(), номерТелефона.end(), ::isdigit);
}

// Просмотр контактов
void ПросмотрКонтактов() {
    std::cout << std::setw(20) << "Имя" << std::setw(20) << "Фамилия" << std::setw(20) << "Телефонный номер" << "\n";
    std::cout << "------------------------------------------------------------\n";
    for (const auto& контакт : ТелефоннаяКнига) {
        std::cout << std::setw(20) << контакт.Имя << std::setw(20) << контакт.Фамилия << std::setw(20) << контакт.ТелефонныйНомер << "\n";
    }
}

int main() {
    setlocale(LC_ALL, "Russian");
    while (true) {
        std::cout << "\nПриложение Телефонный Справочник\n";
        std::cout << "1. Добавить Контакт\n";
        std::cout << "2. Удалить Контакт\n";
        std::cout << "3. Сортировать Контакты\n";
        std::cout << "4. Сохранить в Файл\n";
        std::cout << "5. Просмотр Контактов\n";
        std::cout << "6. Выход\n";
        std::cout << "Введите ваш выбор: ";

        int выбор;
        std::cin >> выбор;

        switch (выбор) {
        case 1:
            ДобавитьКонтакт();
            break;
        case 2:
            УдалитьКонтакт();
            break;
        case 3:
            СортировкаКонтактов();
            std::cout << "Контакты успешно отсортированы.\n";
            break;
        case 4:
            СохранитьВФайл();
            break;
        case 5:
            ПросмотрКонтактов();
            break;
        case 6:
            std::cout << "Завершение программы.\n";
            return 0;
        default:
            std::cout << "Неверный выбор. Пожалуйста, попробуйте снова.\n";
        }
    }

    return 0;
}
